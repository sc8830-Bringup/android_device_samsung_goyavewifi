From 673414b537c481d6e978eb7f65dd8eaaa31b94be Mon Sep 17 00:00:00 2001
From: Dominggoes Isakh <drjisakh@gmail.com>
Date: Fri, 24 Nov 2017 15:29:08 +0100
Subject: [PATCH] libc: Allow passing invalid pthread

   * To prevent softboots with the error
     "invalid pthread_t 0x.. passed to libc" due to legacy
     proprietary libraries.

Change-Id: Ie1876e7cc65d9502a986ee1eb400cb9a34cacf29
---
 libc/bionic/pthread_internal.cpp | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/libc/bionic/pthread_internal.cpp b/libc/bionic/pthread_internal.cpp
index 829194c..2d86484 100644
--- a/libc/bionic/pthread_internal.cpp
+++ b/libc/bionic/pthread_internal.cpp
@@ -115,6 +115,7 @@ pthread_internal_t* __pthread_internal_find(pthread_t thread_id) {
 
   // Historically we'd return null, but
   if (bionic_get_application_target_sdk_version() >= __ANDROID_API_O__) {
+#if 0
     if (thread == nullptr) {
       // This seems to be a common mistake, and it's relatively harmless because
       // there will never be a valid thread at address 0, whereas other invalid
@@ -125,6 +126,9 @@ pthread_internal_t* __pthread_internal_find(pthread_t thread_id) {
     } else {
       async_safe_fatal("invalid pthread_t %p passed to libc", thread);
     }
+#else
+	async_safe_format_log(ANDROID_LOG_WARN, "libc", "invalid pthread_t %p passed to libc", thread);
+#endif
   }
   return nullptr;
 }
-- 
2.7.4

